# Find source files:
FILE(GLOB_RECURSE SWORDXX_C_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/*.c")
FILE(GLOB_RECURSE SWORDXX_CXX_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/*.cpp")
SET(SWORDXX_SOURCES ${SWORDXX_C_SOURCES} ${SWORDXX_CXX_SOURCES})
FILE(GLOB_RECURSE SWORDXX_HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/*.h")

# Configure build of shared library:
ADD_LIBRARY(swordxx SHARED ${SWORDXX_SOURCES} ${SWORDXX_HEADERS})
SET_TARGET_PROPERTIES(swordxx PROPERTIES COMPILE_FLAGS "${SWORDXX_CFLAGS}")
SET_TARGET_PROPERTIES(swordxx PROPERTIES COMPILE_DEFINITIONS
    "${SWORDXX_DEFINITIONS}")
SET_TARGET_PROPERTIES(swordxx PROPERTIES INCLUDE_DIRECTORIES
    "${SWORDXX_INCLUDE_DIRS}")
SET_TARGET_PROPERTIES(swordxx PROPERTIES OUTPUT_NAME "swordxx")
SET_TARGET_PROPERTIES(swordxx PROPERTIES LINK_FLAGS "${SWORDXX_LDFLAGS}")
SET_TARGET_PROPERTIES(swordxx PROPERTIES LINK_LIBRARIES
    "${SWORDXX_LINK_LIBRARIES}")
IF(DEFINED SWORDXX_SOVERSION_OVERRIDE)
  SET(LIBSWORDXX_SOVERSION "${SWORDXX_SOVERSION_OVERRIDE}")
ELSE()
  SET(LIBSWORDXX_SOVERSION "${SWORDXX_VERSION}")
ENDIF()
SET_TARGET_PROPERTIES(swordxx PROPERTIES SOVERSION "${LIBSWORDXX_SOVERSION}")
MESSAGE(STATUS "Using shared library SOVERSION \"${LIBSWORDXX_SOVERSION}\"")

# Install shared library:
INSTALL(TARGETS swordxx
        RUNTIME DESTINATION "${SWORDXX_BIN_INSTALL_PREFIX}"
        LIBRARY DESTINATION "${SWORDXX_LIB_INSTALL_PREFIX}"
        ARCHIVE DESTINATION "${SWORDXX_LIB_INSTALL_PREFIX}")

# Install the headers:
INSTALL(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/"
        DESTINATION "${SWORDXX_INCLUDE_INSTALL_PREFIX}/swordxx"
        FILES_MATCHING PATTERN "*.h")

# Generate and install version.h header, and instruct the build to use it:
SET(SWORDXX_VERSION_H_FILE "${CMAKE_BINARY_DIR}/include/swordxx/version.h")
CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/version.h.in"
               "${SWORDXX_VERSION_H_FILE}" @ONLY)
ADD_DEFINITIONS("-DSWORDXX_VERSION_H_FILE=\"${SWORDXX_VERSION_H_FILE}\"")
INSTALL(FILES "${SWORDXX_VERSION_H_FILE}"
        DESTINATION "${SWORDXX_INCLUDE_INSTALL_PREFIX}/swordxx")

# Set some variables for SwordxxConfig.cmake and sworxx.pc generation:
SET(SWORDXX_INSTALL_LINK_LIBRARIES "-L${SWORDXX_LIB_INSTALL_PREFIX} -lswordxx")
SET(SWORDXX_INSTALL_INCLUDE_DIRS "${SWORDXX_INCLUDE_INSTALL_PREFIX}")
SET(SWORDXX_PC_CFLAGS "-I${SWORDXX_INCLUDE_INSTALL_PREFIX}")
SET(SWORDXX_INSTALL_DEFINITIONS "")

# Generate and install SwordxxConfig.cmake:
CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/SwordxxConfig.cmake.in"
               "${CMAKE_CURRENT_BINARY_DIR}/SwordxxConfig.cmake" @ONLY)
INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/SwordxxConfig.cmake"
        DESTINATION "${SWORDXX_LIB_INSTALL_PREFIX}/Swordxx")

# Generate and install SwordxxConfigVersion.cmake:
CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/SwordxxConfigVersion.cmake.in"
               "${CMAKE_CURRENT_BINARY_DIR}/SwordxxConfigVersion.cmake" @ONLY)
INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/SwordxxConfigVersion.cmake"
        DESTINATION "${SWORDXX_LIB_INSTALL_PREFIX}/Swordxx")

# Generate and install swordxx.pc:
CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/swordxx.pc.in"
               "${CMAKE_CURRENT_BINARY_DIR}/swordxx.pc" @ONLY)
INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/swordxx.pc"
        DESTINATION "${SWORDXX_LIB_INSTALL_PREFIX}/pkgconfig")

# Generate and install the sysconf file:
CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/swordxx.conf.in"
               "${CMAKE_CURRENT_BINARY_DIR}/swordxx.conf" @ONLY)
INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/swordxx.conf"
        DESTINATION "${SWORDXX_SYSCONF_INSTALL_PREFIX}")

# Install an empty mods.d directory:
INSTALL(DIRECTORY DESTINATION "${SWORDXX_SHARE_INSTALL_PREFIX}/swordxx/mods.d")

# Install the locales:
INSTALL(DIRECTORY ${CMAKE_SOURCE_DIR}/locales.d
        DESTINATION "${SWORDXX_SHARE_INSTALL_PREFIX}/swordxx")
